.program ws2812a

.wrap_target
    pull block                  ; pull the next data (RGB value for a LED)
    out null, 8                 ; ignore the trailing 8 bits

next_bit:
    out x, 1                    ; copy 1 bit (the MSB) of data to X
    jmp !x bit_0                ; jump if the bit is "0"
                                ; the bit is "1"
    mov pins, !null [3]         ; set the GPIO to "1" (and wait one more tick)
    mov pins, null              ; set the GPIO to "0"
    jmp bit_end                 ; unconditional jump

bit_0:
    mov pins, !null             ; set the GPIO to "1"
    mov pins, null [1]          ; set the GPIO to "0" (and wait one more tick)

bit_end:
    jmp !osre next_bit          ; jump if the shift register contains more bits
                                ; shift register empty -> no more data to send for a LED
.wrap



